---
resource_types:
  - name: s3-simple
    type: docker-image
    source:
      repository: 18fgsa/s3-resource-simple

  - name: workflow-events
    type: docker-image
    source:
      repository: openstax/workflow-event-resource

resources:
  - name: s3
    type: s3-simple
    source:
      access_key_id: ((aws-access-key-id))
      secret_access_key: ((aws-secret-access-key))
      bucket: ((s3bucket))
      region: ((s3region))
      options:
        - "--exclude '*'"
        - "--include 'book/*'"

  - name: s3-artifacts
    type: s3
    source:
      bucket: ((s3bucket))
      access_key_id: ((aws-access-key-id))
      secret_access_key: ((aws-secret-access-key))
      skip_download: true
      regexp: artifacts/(.*).pdf

  - name: cnx-recipes
    type: git
    source:
      uri: https://github.com/openstax/cnx-recipes.git

  - name: pdf-spike
    type: git
    source:
      uri: https://github.com/openstax/pdf-spike.git
      branch: additional-logging

  - name: workflow-events-queued
    type: workflow-events
    source:
      api_root: ((pdf-job-queue-url))
      status_id: 1

  - name: event-update
    type: workflow-events
    source:
      api_root: ((pdf-job-queue-url))
      status_id: 0

jobs:
  - name: claim-work
    plan:
      - get: workflow-events-queued
        trigger: true
        version: every
      - put: event-update
        params:
          id: workflow-events-queued/id
          status_id: "2" #Assigned

    on_success:
      put: event-update
      params:
        id: workflow-events-queued/id
        status_id: "3" #Processing

  - name: fetch-book
    plan:
      - get: workflow-events-queued
        trigger: true
        passed: [claim-work]
      - get: pdf-spike
      - task: look-up-book
        file: pdf-spike/bakery/tasks/t-book-lookup.yml
      - task: fetch-book-via-neb
        #file: pdf-spike/bakery/tasks/t-fetch-book.yml
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: openstax/nebuchadnezzar
              tag: latest

          inputs:
            - name: book-title
          outputs:
            - name: book

          run:
            path: /bin/bash
            args:
              - -cxe
              - |
                exec 2> >(tee book/stderr >&2)
                neb get -r -d "./temp" "$(cat book-title/server | cut -f1 -d".")" "$(cat book-title/collection_id)" "$(cat book-title/version)"
                mv temp/* book

    on_failure:
      put: event-update
      params:
        id: workflow-events-queued/id
        status_id: "4" #Failed
    on_success:
      put: s3

  - name: assemble-book
    plan:
      - get: workflow-events-queued
        trigger: true
        passed: [fetch-book]
      - get: pdf-spike
      - task: look-up-book
        file: pdf-spike/bakery/tasks/t-book-lookup.yml
      - get: s3
      - task: assemble-book-via-neb
        #file: pdf-spike/bakery/tasks/t-assemble-book.yml
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: openstax/nebuchadnezzar
              tag: latest

          inputs:
            - name: s3
          outputs:
            - name: book

          run:
            path: /bin/bash
            args:
              - -cxe
              - |
                exec 2> >(tee book/stderr >&2)
                rm -f s3/stderr
                neb assemble "s3/book" "./book"

    on_failure:
      put: event-update
      params:
        id: workflow-events-queued/id
        status_id: "4" #Failed
    on_success:
      put: s3
      params:
        path: book

  - name: bake-book
    plan:
      - get: workflow-events-queued
        trigger: true
        passed: [assemble-book]
      - get: pdf-spike
      - task: look-up-book
        file: pdf-spike/bakery/tasks/t-book-lookup.yml
      - get: s3
      - get: cnx-recipes
      - task: bake-book-via-easy-bake
        #file: pdf-spike/bakery/tasks/t-bake-book.yml
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: openstax/cnx-easybake

          inputs:
            - name: book-title
            - name: s3
            - name: cnx-recipes
          outputs:
            - name: book

          run:
            path: /bin/bash
            args:
              - -cxe
              - |
                exec 2> >(tee book/stderr >&2)
                rm -f s3/stderr
                book_dir="book"
                cnx-easybake "cnx-recipes/recipes/output/$(cat book-title/recipe).css" "s3/$book_dir/collection.assembled.xhtml" "$book_dir/collection.baked.xhtml"
                style_file="cnx-recipes/styles/output/$(cat book-title/name)-pdf.css"
                if [ -f "$style_file" ]
                then
                  cp "$style_file" $book_dir/
                  sed -i "s%<\\/head>%<link rel=\"stylesheet\" type=\"text/css\" href=\"$(basename $style_file)\" />&%" "$book_dir/collection.baked.xhtml"
                fi

    on_failure:
      put: event-update
      params:
        id: workflow-events-queued/id
        status_id: "4" #Failed
    on_success:
      put: s3
      params:
        path: book

  - name: mathify-book
    plan:
      - get: workflow-events-queued
        trigger: true
        passed: [bake-book]
      - get: pdf-spike
      - task: look-up-book
        file: pdf-spike/bakery/tasks/t-book-lookup.yml
      - get: s3
      - task: mathify-book-via-mathify
        #file: pdf-spike/bakery/tasks/t-mathify-book.yml
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: openstax/mathify
              tag: latest

          inputs:
            - name: s3
          outputs:
            - name: book

          run:
            path: /bin/bash
            args:
              - -cxe
              - |
                exec 2> >(tee book/stderr >&2)
                rm -f s3/stderr
                node /src/typeset/start -i "s3/book/collection.baked.xhtml" -o "book/collection.mathified.xhtml" -f svg

    on_failure:
      put: event-update
      params:
        id: workflow-events-queued/id
        status_id: "4" #Failed
    on_success:
      put: s3
      params:
        path: book

  - name: generate-pdf
    plan:
      - get: workflow-events-queued
        trigger: true
        passed: [mathify-book]
      - get: pdf-spike
      - task: look-up-book
        file: pdf-spike/bakery/tasks/t-book-lookup.yml
      - get: s3
      - task: pdf-book-via-princexml
        #file: pdf-spike/bakery/tasks/t-build-pdf.yml
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: openstax/princexml
              tag: latest
          inputs:
            - name: book-title
            - name: s3
          outputs:
            - name: artifacts

          run:
            user: root
            path: /bin/bash
            args:
              - -cxe
              - |
                exec 2> >(tee s3/book/stderr >&2)
                rm -f artifacts/stderr
                prince -v --output="artifacts/$(cat book-title/name).pdf" "s3/book/collection.assembled.xhtml"
                echo -n "https://ce-pdf-spike.s3.amazonaws.com/artifacts/$(cat book-title/name).pdf" >artifacts/pdf_url
      - put: s3-artifacts
        params:
          file: artifacts/*.pdf
          acl: public-read
          content_type: application/pdf

    on_failure:
      put: event-update
      params:
        id: workflow-events-queued/id
        status_id: "4" #Failed
    on_success:
      put: event-update
      params:
        id: workflow-events-queued/id
        status_id: "5"
        pdf_url: artifacts/pdf_url
